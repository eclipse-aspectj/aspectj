<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectj-parent</artifactId>
		<version>1.9.23-SNAPSHOT</version>
	</parent>

	<artifactId>installer</artifactId>

	<name>AspectJ Installer</name>
	<description>
		The AspectJ installer is an executable JAR capable of installing a full AspectJ distribution consisting of libraries
		(AspectJ runtime, weaver and tools/compiler) and API Javadoc.
	</description>
	<url>https://www.eclipse.org/aspectj/</url>

	<licenses>
		<license>
			<name>Eclipse Public License - v 2.0</name>
			<url>https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>aclement</id>
			<name>Andy Clement</name>
			<email>aclement@vmware.com</email>
		</developer>
		<developer>
			<id>kriegaex</id>
			<name>Alexander Kriegisch</name>
			<email>kriegaex@aspectj.dev</email>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/eclipse/org.aspectj</url>
		<connection>scm:git:https://github.com/eclipse/org.aspectj.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:eclipse/org.aspectj.git</developerConnection>
	</scm>

	<properties>
		<!--
			TODO: Decide whether to publish this artifact on Maven Central or not. For now, skip the deployment until a final
			  decision was made. If we do decide to publish, we need to add source and javadoc JARs. I suggest to re-use the
			  ones from aspectjtools, because the installer contains runtime, weaver and tools and the latter one is a
			  superset of the former two.
		-->
		<!-- By default, do not deploy artifacts - but deploy this public one -->
		<!--<maven.deploy.skip>false</maven.deploy.skip>-->
		<!-- By default, do not sign artifacts - but sign this public one -->
		<!--<maven.gpg.skip>false</maven.gpg.skip>-->
	</properties>

	<dependencies>
		<!-- Uber JARs to add to the installer archive: runtime, weaver, tools -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Executable JAR installer classes -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>build</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- AspectJ documentation, created by Asciidoctor in aj-build/dist/docs -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>docs</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Runtime javadocs - TODO: use full tools javadocs instead -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>runtime</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- Skip creation of main + test JARs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>test-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>aspectjinstaller-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>aspectj-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<archive>
								<manifestEntries>
									<Main-Class>$installer$.org.aspectj.Main</Main-Class>
								</manifestEntries>
							</archive>
							<descriptors>
								<descriptor>aspectjinstaller-assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Caveat: Attaching the flattened POM needs packaging=jar, so do not use packaging=pom for this module -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<executions>
					<!-- Remove dependencies declared in this POM (if any) from uber JAR and strip down POM -->
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<flattenMode>oss</flattenMode>
							<pomElements>
								<dependencies>remove</dependencies>
								<repositories>remove</repositories>
							</pomElements>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<flattenedPomFilename>flattened-pom.xml</flattenedPomFilename>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											flatten-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.2,)
										</versionRange>
										<goals>
											<goal>flatten</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
