compiler.name = AspectJ Compiler
compiler.version = Eclipse Compiler 23b713ce21cc8c (01Dec2023) - Java21
compiler.copyright =

misc.version = {0} {1} - {2} {3}

# In org.aspectj.org.eclipse.jdt.internal.compiler.batch.Main.printUsage(java.lang.String) of JDT, the following
# parameters are being bound to usage messages (misc.usage, misc.usage.warn, xoption.usage):
#   {0} System.getProperty("path.separator")
#   {1} compiler.name
#   {2} compiler.version
#   {3} compiler.copyright

# This property only exists in AspectJ. It is to be patched into the value of 'misc.usage' at the correct position,
# i.e. right between "Usage" and "Classpath options".
misc.usage.aspectj = AspectJ-specific options:\n\
\    -inpath <list>      use classes in dirs and jars/zips in <list> as source\n\
\                        (<list> uses platform-specific path delimiter)\n\
\    -injars <jarList>   use classes in <jarList> zip files as source\n\
\                        (<jarList> uses classpath delimiter)\n\
\                        deprecated - use inpath instead.\n\
\    -aspectpath <list>  weave aspects in .class files from <list> dirs and jars/zip into sources\n\
\                        (<list> uses classpath delimiter)\n\
\    -outjar <file>      put output classes in zip file <file>\n\
\    -outxml             generate META-INF/aop.xml\n\
\    -outxmlfile <file>  specify alternate destination output of -outxml\n\
\    -argfile <file>     specify line-delimited list of source files\n\
\    -showWeaveInfo      display information about weaving\n\
\    -incremental        continuously-running compiler, needs -sourceroots\n\
\                        (reads stdin: enter to recompile and ''q'' to quit)\n\
\    -sourceroots <dirs> compile all .aj and .java files in <dirs>\n\
\                        (<dirs> uses classpath delimiter)\n\
\    -crossrefs          generate .ajsym file into the output directory\n\
\    -emacssym           generate .ajesym symbol files for emacs support\n\
\    -Xlint              same as ''-Xlint:warning''\n\
\    -Xlint:<level>      set default level for crosscutting messages\n\
\                        (<level> may be ignore, warning, or error)\n\
\    -Xlintfile <file>   specify properties file to set per-message levels\n\
\                        (cf org/aspectj/weaver/XlintDefault.properties)\n\
\    -X                  print help on non-standard options\n\
\ \n\
\ Standard Eclipse compiler options:\n\
\ \n\


# This property only exists in AspectJ. Options not documented below (see org.aspectj.ajdt.ajc.BuildArgParser):
# -XincrementalFile, -XjavadocsInModel, -Xset:, -Xdev:NoAtAspectJProcessing, -Xdev:Pinpoint
xoption.usage = {1} - {2}\n\
\ \n\
\ AspectJ-specific non-standard options:\n\
\    -XnoInline            don't inline advice\n\
\    -XnotReweavable       create class files that can't be subsequently rewoven\n\
\                          by AspectJ.\n\
\    -XserializableAspects allows aspects to implement serializable\n\
\    -XterminateAfterCompilation compile classes then terminate before weaving\n\
\    -XaddSerialVersionUID calculates and adds the serialVersionUID to any\n\
\                          serializable type woven by an aspect\n\
\    -Xajruntimetarget:<level> allows code to be generated that targets\n\
\                          a 1.2, 1.5, 1.9 level AspectJ runtime (default 1.5)\n\
\    -XhasMember           allow hasmethod() and hasfield type patterns in\n\
\                          declare parents and declare @type\n\
\    -Xjoinpoints:         supply a comma separated list of new joinpoints\n\
\                          that can be identified by pointcuts. Values are:\n\
\                          arrayconstruction, synchronization\n
